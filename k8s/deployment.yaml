---
# Namespace
apiVersion: v1
kind: Namespace
metadata:
  name: pravda-system
  labels:
    app: pravda-plus

---
# Database Secret
apiVersion: v1
kind: Secret
metadata:
  name: database-secret
  namespace: pravda-system
type: Opaque
stringData:
  POSTGRES_USER: "pravda"
  POSTGRES_PASSWORD: "CHANGE_ME_IN_PRODUCTION"
  POSTGRES_DB: "pravda_db"

---
# Application Secret
apiVersion: v1
kind: Secret
metadata:
  name: app-secret
  namespace: pravda-system
type: Opaque
stringData:
  SECRET_KEY: "CHANGE_ME_IN_PRODUCTION"
  OPENAI_API_KEY: "CHANGE_ME_IN_PRODUCTION"

---
# PostgreSQL Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: pravda-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:15
        envFrom:
        - secretRef:
            name: database-secret
        ports:
        - containerPort: 5432
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "500m"
      volumes:
      - name: postgres-storage
        emptyDir: {}

---
# PostgreSQL Service
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
  namespace: pravda-system
spec:
  selector:
    app: postgres
  ports:
  - port: 5432
    targetPort: 5432

---
# Redis Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: pravda-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis:7-alpine
        ports:
        - containerPort: 6379
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"

---
# Redis Service
apiVersion: v1
kind: Service
metadata:
  name: redis-service
  namespace: pravda-system
spec:
  selector:
    app: redis
  ports:
  - port: 6379
    targetPort: 6379

---
# API Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
  namespace: pravda-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
    spec:
      containers:
      - name: api
        image: pravda-api:latest
        imagePullPolicy: Never
        ports:
        - containerPort: 8000
        env:
        - name: ENVIRONMENT
          value: "test"
        - name: TRANSFORMER_URL
          value: "http://transformer-service:8002"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 5
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "500m"

---
# API Service
apiVersion: v1
kind: Service
metadata:
  name: api-service
  namespace: pravda-system
spec:
  selector:
    app: api
  ports:
  - port: 8000
    targetPort: 8000

---
# Frontend Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: pravda-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
      - name: frontend
        image: pravda-frontend:latest
        imagePullPolicy: Never
        ports:
        - containerPort: 80
        env:
        - name: API_URL
          value: "http://api-service:8000"
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 5
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"

---
# Frontend Service
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
  namespace: pravda-system
spec:
  selector:
    app: frontend
  ports:
  - port: 3000
    targetPort: 80

---
# Transformer Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: transformer
  namespace: pravda-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: transformer
  template:
    metadata:
      labels:
        app: transformer
    spec:
      containers:
      - name: transformer
        image: pravda-transformer:latest
        imagePullPolicy: Never
        ports:
        - containerPort: 8002
        env:
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: app-secret
              key: OPENAI_API_KEY
        livenessProbe:
          httpGet:
            path: /health
            port: 8002
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8002
          initialDelaySeconds: 10
          periodSeconds: 5
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "500m"

---
# Transformer Service
apiVersion: v1
kind: Service
metadata:
  name: transformer-service
  namespace: pravda-system
spec:
  selector:
    app: transformer
  ports:
  - port: 8002
    targetPort: 8002